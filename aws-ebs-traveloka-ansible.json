{
    "variables": {
      "aws_access_key": "",
      "aws_secret_key": "",
      "aws_subnet_id": "{{ env `APP_TEMPLATE_INSTANCE_SUBNET_ID` }}",
      "aws_vpc_id": "{{ env `APP_TEMPLATE_INSTANCE_VPC_ID` }}",
      "aws_region": "{{ env `AWS_REGION` }}",
      "aws_ssh_username": "ubuntu",
      "aws_instance_type": "t2.small",
      "aws_instance_profile": "{{ env `APP_TEMPLATE_INSTANCE_PROFILE` }}",
      "aws_target_accounts": "",
      "aws_associate_public_ip_address": "true",
      "aws_enhanced_networking": "false",
      "app_type": null,
      "app_name": null,
      "app_version": null,
      "build_time": null,
      "app_product_domain": null,
      "working_directory": "{{ env `CODEBUILD_SRC_DIR` }}",
      "app_target_directory": "/home/ubuntu",
      "security_group_id": "{{ env `APP_TEMPLATE_SG_ID` }}",
      "source_ami_name_filter": "{{ env `STACK_AMI_NAME_FILTER` }}",
      "source_ami_owners": "{{ env `STACK_AMI_OWNERS` }}"
    },
    "builders": [{
      "type": "amazon-ebs",
      "access_key": "{{ user `aws_access_key` }}",
      "secret_key": "{{ user `aws_secret_key` }}",
      "subnet_id": "{{ user `aws_subnet_id` }}",
      "vpc_id": "{{ user `aws_vpc_id` }}",
      "security_group_id": "{{ user `security_group_id` }}",
      "region": "{{ user `aws_region` }}",
      "ssh_username": "{{ user `aws_ssh_username` }}",
      "ssh_pty": true,
      "instance_type": "{{ user `aws_instance_type` }}",
      "iam_instance_profile": "{{ user `aws_instance_profile` }}",
      "source_ami_filter": {
        "filters": {
          "name": "{{ user `source_ami_name_filter` }}",
          "virtualization-type": "hvm",
          "root-device-type": "ebs"
        },
        "owners": "{{ user `source_ami_owners` }}",
        "most_recent": true
      },
      "run_tags": {
        "Application": "{{ user `app_type` }}",
        "Service": "{{ user `app_name` }}",
        "ServiceVersion": "{{ user `app_version` }}",
        "ProductDomain": "{{ user `app_product_domain` }}",
        "Cluster": "{{ user `app_name` }}-app",
        "Environment": "management",
        "Description": "{{ user `app_name` }} AMI baking instance (by Packer)",
        "AppBuildTime": "{{ user `build_time` | clean_ami_name}}"
      },
      "run_volume_tags": {
        "ProductDomain": "{{ user `app_product_domain` }}",
        "Environment": "management"
      },
      "ami_name": "tvlk/ubuntu/{{ user `app_product_domain` }}/{{ user `app_name` }}-{{ user `app_version` }}/hvm/x86_64/ebs",
      "ami_users": "{{ user `aws_target_accounts` }}",
      "associate_public_ip_address": "{{ user `aws_associate_public_ip_address` }}",
      "sriov_support": "{{ user `aws_enhanced_networking` }}",
      "tags": {
        "Application": "{{ user `app_type` }}",
        "Service": "{{ user `app_name` }}",
        "ServiceVersion": "{{ user `app_version` }}",
        "ProductDomain": "{{ user `app_product_domain` }}",
        "AppBuildTime": "{{ user `build_time` | clean_ami_name}}",
        "AmiBakeTime": "{{isotime | clean_ami_name}}",
        "BaseAmiId": "{{ .SourceAMI }}"
      }
    }],
    "provisioners": [
      {
          "type": "file",
          "source": "{{ user `app_name` }}-{{ user `app_version` }}",
          "destination": "{{ user `app_target_directory` }}"
      },
      {
          "type": "ansible",
          "ansible_env_vars": [ "ANSIBLE_NOCOLOR=True"],
          "playbook_file": "{{ user `app_name` }}.yml",
          "sftp_command": "/usr/libexec/openssh/sftp-server -e",
          "extra_arguments": ["--extra-vars",
            "app_name={{ user `app_name` }} app_version={{ user `app_version` }} working_directory={{ user `working_directory` }} app_target_directory={{ user `app_target_directory` }}",
            "-vvv"]
      },
      {
        "type": "shell",
        "inline": [
          "sudo apt-get -y autoremove",
          "sudo apt-get -y clean",
          "sudo apt-get -y autoclean",
          "rm -rf ~/.ssh/ ~/.bash_history",
          "sudo rm -rf /root/.ssh/ /root/.bash_history",
          "sudo find /var/log/ -type f -delete"
        ]
      }
    ],
    "post-processors": [
      {
        "type": "manifest"
      }
    ]
  }
